
from typing import List
from datetime import datetime
from collections import defaultdict
import heapq
from collections import deque
import math
from typing import (
    List,
)


# class Solution:
#     def canCross(self, stones: List[int]) -> bool:
#         n = len(stones)
#         dp = {s : set() for s in stones}
#         dp[0].add(0)

#         for i in range(n):
#             for jump in dp[stones[i]]:
#                 for next_jump in [jump - 1, jump, jump + 1]:
#                     if next_jump > 0 and stones[i] + next_jump in dp:
#                         dp[stones[i] + next_jump].add(next_jump)
            
#         return len(dp[stones[n - 1]]) > 0
    
class Solution:
    def canCross(self, stones: List[int]) -> bool:
        n = len(stones)
        dp = [set() for i in range(n)]
        dp[0].add(0)

        for i in range(1, n):
            for j in range(i):
                k = stones[i] - stones[j]
                if (k - 1 in dp[j] or k in dp[j] or k + 1 in dp[j]):
                    dp[i].add(k)
            
        print(dp)
        return len(dp[n - 1]) > 0

s = Solution()
ts = datetime.now()
res = s.canCross([0,1,6486,15432,20151,25703,28357,32969,41139,46340,51803,59268,59824,65298,71307,71585,80517,80707,82734,88831,93443,100949,108050,111036,115637,117473,118297,123330,128631,136277,139770,145210,150980,154135,161321,167766,173816,174085,180439,184979,192136,199576,209071,212348,214116,217966,222157,226315,232885,237840,246825,248916,251053,254883,259874,263342,265076,274379,279652,281460,284835,286572,288263,296599,300159,305728,308393,316016,323033,328059,328402,330588,340025,341546,345838,346418,351531,353122,360629,363642,366291,371953,375204,383791,390439,393586,396838,399843,403121,410571,415879,420178,424592,428536,431120,432025,441555,446631,454852,459061,462869,470916,479818,483444,484125,491355,498448,506255,512501,522368,529896,531033,538630,541599,544305,551189,558097,563076,564106,565316,574626,574718,578405,588095,596721,606282,608191,617421,620211,621264,630339,631392,637148,643788,648329,650508,650641,653720,657409,663487,669767,672193,680244,688500,689639,692802,699170,702991,711162,715334,718757,719075,728328,729133,737681,747493,755565,763250,767311,770854,780281,788993,792859,794257,799548,802958,812953,818310,820710,824588,827076,829861,831865,839938,842815,846039,854855,857757,859976,868007,870265,873597,876014,877791,878021,880184,883733,892410,897964,905732,909615,912160,921261,927405,933293,933757,937413,943957,949774,953119,961482,967171,976238,985794,989967,993141,994030,1000850,1003776,1003856,1007005,1012945,1019375,1027854,1035150,1039370,1040976,1041538,1050003,1051473,1051938,1052047,1055964,1057267,1060181,1062991,1064775,1069077,1073897,1081083,1090091,1090283,1097368,1106257,1110985,1118585,1119801,1122031,1129935,1135912,1143858,1148610,1152582,1158417,1164552,1169523,1179357,1186140,1188926,1189668,1192808,1200091,1204276,1209339,1211460,1215393,1224424,1231198,1236284,1238799,1247890,1249770,1256835,1261957,1267259,1275230,1285111,1292014,1300938,1308634,1312571,1318071,1320655,1329027,1330894,1337795,1345901,1352140,1353211,1358134,1367917,1374569,1383579,1385086,1393859,1401921,1407681,1409677,1412290,1415663,1422234,1424393,1433398,1435604,1436893,1445826,1446733,1451471,1457665,1457666,1461853,1466815,1472577,1473892,1479748,1487928,1490577,1497863,1502759,1510482,1513394,1517697,1524843,1526605,1530369,1537567,1539228,1549054,1557596,1562036,1565691,1567416,1576058,1579776,1580543,1588273,1595270,1604328,1614033,1616643,1621658,1624561,1634145,1643870,1652722,1655219,1659510,1661429,1670464,1672500,1676815,1678747,1687796,1696909,1704124,1704944,1714433,1716215,1717912,1725339,1733397,1742905,1743078,1744987,1753177,1757413,1766489,1775099,1777840,1780817,1785460,1792216,1800245,1809891,1815076,1822676,1825597,1833803,1839578,1848317,1856112,1861030,1865576,1866578,1871442,1877006,1881183,1891148,1896880,1903701,1911323,1913442,1920785,1920969,1928923,1937542,1944726,1954370,1959721,1959755,1968755,1977047,1977964,1979540,1986328,1986528,1994902,1995153,2003823,2007614,2017035,2024424,2026864,2035570,2042770,2047212,2047907,2051314,2061049,2066461,2071214,2072772,2075955,2084155,2085400,2092596,2097005,2102600,2111151,2114660,2118109,2121886,2123063,2129190,2132133,2141201,2148821,2151559,2156408,2164670,2167175,2172119,2174256,2182485,2184073,2188866,2194420,2199649,2202042,2206999,2213717,2222478,2226017,2232874,2238175,2247954,2250446,2251152,2256647,2257290,2265070,2269373,2274002,2283059,2291235,2293152,2301890,2306353,2308957,2312702,2315845,2321573,2331549,2332847,2341086,2349558,2358886,2367628,2369301,2374227,2376971,2384702,2386995,2388352,2395381,2402965,2410026,2411746,2420546,2428845,2431053,2437492,2445116,2449335,2450279,2459441,2465502,2467003,2472878,2479919,2481650,2490003,2496737,2502942,2506823,2511829,2514627,2520227,2526552,2536365,2540066,2543339,2547893,2548363,2555921,2562922,2563775,2572489,2582135,2584014,2590263,2593005,2599722,2608090,2614571,2618610,2623618,2633164,2641202,2650334,2658794,2662205,2663060,2668735,2676381,2682831,2683702,2690924,2698441,2699556,2705831,2712749,2716842,2725404,2731930,2737133,2745545,2749853,2752077,2753226,2754632,2762240,2768781,2769447,2774518,2782461,2790516,2798589,2808561,2811613,2817900,2818701,2825739,2831541,2837944,2841029,2841370,2850423,2850439,2857421,2862061,2867389,2874792,2881107,2887275,2891019,2891486,2894675,2904496,2904921,2912678,2918601,2925218,2929049,2937066,2939201,2946535,2947814,2956038,2956307,2960528,2964206,2965598,2970142,2973249,2979960,2987219,2990773,2991594,2995170,3000168,3006715,3011930,3020191,3020625,3028435,3031376,3039640,3044211,3051134,3055219,3057241,3058090,3067896,3073714,3079469,3083099,3089511,3098347,3103952,3110118,3115325,3123312,3126953,3128640,3128908,3136247,3145281,3153802,3161405,3170201,3173382,3178170,3179059,3182853,3186413,3186655,3187034,3187942,3192780,3201352,3207598,3211144,3214619,3223891,3224723,3226114,3230757,3240236,3245487,3248097,3250235,3253483,3257047,3259226,3265291,3273047,3276777,3279476,3285023,3285623,3291338,3292227,3292541,3293273,3295190,3296459,3297514,3301235,3305460,3307690,3313104,3322645,3327576,3332971,3336765,3338777,3344804,3354703,3355783,3357850,3359326,3364688,3365009,3371485,3375382,3382938,3390081,3392258,3393015,3393610,3398293,3402809,3406247,3406528,3410468,3412758,3415454,3416610,3420577,3423035,3431788,3434135,3441325,3444151,3453159,3457886,3463858,3472441,3476624,3484577,3490558,3497523,3502294,3504218,3510444,3518741,3523195,3529630,3529910,3535190,3545093,3550788,3554524,3558193,3563707,3568998,3572875,3581662,3590277,3597891,3601323,3606483,3606815,3608800,3616023,3616797,3626473,3627587,3629970,3639956,3647785,3652792,3656955,3664931,3667875,3675274,3680392,3685455,3695312,3704865,3712334,3718160,3722240,3726534,3728835,3729436,3735778,3742764,3746647,3752053,3758372,3763842,3772453,3779451,3780708,3789587,3796377,3805517,3813493,3822732,3822813,3832238,3835395,3835490,3842643,3843036,3846476,3851175,3859336,3859876,3866772,3874358,3884215,3890818,3893849,3903554,3911088,3912668,3912698,3914451,3915266,3925007,3931620,3937689,3943706,3951856,3956743,3960471,3970423,3973027,3982372,3985264,3992812,4000688,4005099,4009670,4010319,4016990,4023557,4025840,4027569,4037269,4038016,4043618,4047312,4051835,4056327,4058233,4066183,4074425,4083912,4088235,4096073,4100838,4107722,4113177,4122966,4128653,4136697,4142913,4148652,4148820,4154518,4154568,4163076,4165951,4172591,4174774,4178937,4180747,4190043,4190412,4192497,4192752,4201484,4205723,4214202,4217695,4221729,4228194,4237498,4240965,4242678,4247589,4254263,4261911,4264609,4269166,4278863,4279383,4284153,4293778,4299178,4304806,4314063,4317649,4324721,4328293,4333686,4342719,4349442,4357193,4357692,4361159,4370882,4380841,4389769,4392911,4401249,4402988,4411286,4414597,4422236,4426413,4426970,4430169,4436192,4443331,4446483,4453667,4461812,4471363,4481200,4482069,4491492,4497696,4506161,4515349,4521520,4530756,4534844,4544350,4549221,4552670,4555355,4557317,4566817,4566864,4567507,4575292,4583590,4585330,4594923,4598590,4602946,4611085,4617440,4623896,4628447,4628895,4632487,4633816,4635852,4638269,4640684,4644363,4646424,4649486,4654595,4662499,4667798,4672832,4675510,4685139,4687767,4697664,4698993,4704845,4709246,4714525,4715521,4723537,4727596,4730139,4738785,4741485,4748028,4752414,4757023,4766822,4769676,4773541,4773695,4780064,4783060,4789780,4798689,4803069,4803251,4811919,4821744,4823484,4823666,4830266,4832949,4838336,4847506,4850734,4853868,4861771,4865916,4865974,4868592,4874013,4883604,4885299,4889738,4894275,4898470,4907828,4909901,4919298,4927364,4931734,4937962,4944047,4944504,4948825,4955927,4958409,4959178,4963380,4966921,4967440,4974900,4975445,4978647,4980507,4987088,4992653,4992879,5001803,5010851,5016478,5017280,5025991,5033020,5037553,5038278,5045319,5048962])
print(datetime.now() - ts)
print(res)
